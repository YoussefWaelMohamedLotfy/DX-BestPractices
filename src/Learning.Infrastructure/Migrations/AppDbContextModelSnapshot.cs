// <auto-generated />
using System;
using Learning.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Learning.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("CourseUser", b =>
                {
                    b.Property<int>("CoursesEnrolledID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersEnrolledID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CoursesEnrolledID", "UsersEnrolledID");

                    b.HasIndex("UsersEnrolledID");

                    b.ToTable("CourseUser");
                });

            modelBuilder.Entity("Learning.Domain.Entities.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Learning.Domain.Entities.Module", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Learning.Domain.Entities.Perk", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<float>("Points")
                        .HasColumnType("REAL");

                    b.Property<int>("PremiumUserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("PremiumUserID");

                    b.ToTable("Perks");
                });

            modelBuilder.Entity("Learning.Domain.Entities.Subscription", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("NormalUserID")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Rank")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("NormalUserID");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Learning.Domain.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Learning.Domain.Entities.NormalUser", b =>
                {
                    b.HasBaseType("Learning.Domain.Entities.User");

                    b.Property<int>("NumberOfLogins")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("NormalUser");
                });

            modelBuilder.Entity("Learning.Domain.Entities.PremiumUser", b =>
                {
                    b.HasBaseType("Learning.Domain.Entities.User");

                    b.Property<string>("Bio")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("PremiumUser");
                });

            modelBuilder.Entity("CourseUser", b =>
                {
                    b.HasOne("Learning.Domain.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesEnrolledID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Learning.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersEnrolledID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Learning.Domain.Entities.Module", b =>
                {
                    b.HasOne("Learning.Domain.Entities.Course", "Course")
                        .WithMany("Modules")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Learning.Domain.Entities.Perk", b =>
                {
                    b.HasOne("Learning.Domain.Entities.PremiumUser", "PremiumUser")
                        .WithMany()
                        .HasForeignKey("PremiumUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PremiumUser");
                });

            modelBuilder.Entity("Learning.Domain.Entities.Subscription", b =>
                {
                    b.HasOne("Learning.Domain.Entities.NormalUser", "NormalUser")
                        .WithMany()
                        .HasForeignKey("NormalUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NormalUser");
                });

            modelBuilder.Entity("Learning.Domain.Entities.Course", b =>
                {
                    b.Navigation("Modules");
                });
#pragma warning restore 612, 618
        }
    }
}
